name: 'Terraform GitHub Actions'
defaults:
  run:
    working-directory: "terraform"

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  install:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_329066851743 }}
        role-duration-seconds: 1200
        aws-region: eu-west-1
      
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: 1.1.7

    - name: Setup NodeJs
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '12'

    - name: Install jq
      run: |
        if [ ! `which jq` ]; then
          sudo yum install jq -y
        fi 
        
  terraform_plan:
    runs-on: [self-hosted, Linux, X64]
    needs: [install]
    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_329066851743 }}
        role-duration-seconds: 1200
        aws-region: eu-west-1
          
    - name: Verify Terraform version
      run: terraform --version

    - name: Terraform Format
      run: terraform fmt -check -recursive

    # AÃ±ade comentarios al PR cuando TFSEC falla
    # https://github.com/marketplace/actions/run-tfsec-pr-commenter
    - name: tfsec
      uses: aquasecurity/tfsec-pr-commenter-action@v1.1.0
      with:
        tfsec_args: --soft-fail
        github_token: ${{ github.token }}  
        
    - name: Terraform Init    
      env:
        ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }}
      run: sh ./assume_role.sh $ROLE terraform init

    - name: Terraform Plan
      env:
        ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }}      
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      continue-on-error: true       
      run: sh ./assume_role.sh $ROLE terraform plan

    - name: Terraform Plan Status
      env:
        ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }}      
      if: steps.plan.outcome == 'failure'
      run: sh ./assume_role.sh $ROLE exit 1

  terraform_apply:
    runs-on: [self-hosted, Linux, X64]
    needs: [terraform_plan]
    environment: prod
    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_329066851743 }}
        role-duration-seconds: 1200
        aws-region: eu-west-1

    - name: Terraform Init     
      env:
        ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }}
      run: sh ./assume_role.sh $ROLE terraform init
        
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }}
      run: sh ./assume_role.sh $ROLE terraform apply -auto-approve
