name: 'Terraform GitHub Actions'
defaults:
  run:
    working-directory: "terraform"

on:
  - pull_request
  - push

jobs:
  terraform:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_329066851743 }}
        role-duration-seconds: 1200
        aws-region: eu-west-1

    - name: Install Terraform
      id: utilities
      run: sudo yum install -y jq yum-utils && sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo && sudo yum -y install terraform

    - name: Assume Role
      id: assume_role
      run: temp_role=$(aws sts assume-role --role-arn ${{ secrets.AWS_ROLE_TO_ASSUME_550341143323 }} --role-session-name AWS_ROLE_TO_ASSUME_550341143323) && export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId) && export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey) && export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken) && echo "Current Assume role is:" && aws sts get-caller-identity > /tmp/roles.txt && terraform init && terraform apply -auto-approve

    - name: Get AWS_ACCESS_KEY_ID new Role
      id: access_key_id_new_role
      run: export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)

    - name: Get AWS_SECRET_ACCESS_KEY new Role
      id: access_secret_id_new_role
      run: export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
      
    - name: Get AWS_SESSION_TOKEN new Role
      id: access_session_id_new_role
      run: export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)

    - name: Caller Identity
      id: caller
      run: echo "Current Assume role is:" && aws sts get-caller-identity > /tmp/roles2.txt
      
    - name: Verify Terraform version
      id: version
      run: terraform --version

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check -recursive
      
    - name: Terraform Init
      id: init        
      run: terraform init -input=false

    - name: Terraform Validate
      id: validate    
      run: terraform validate
      
    - name: Terraform Plan
      id: plan
      #if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true      

    - name: Terraform Apply
      id: apply
      #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
